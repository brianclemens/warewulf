(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{109:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return d})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return s}));var o=t(3),r=t(7),a=(t(0),t(115)),i={id:"node",title:"wwctl node"},d={unversionedId:"wwctl/node",id:"wwctl/node",isDocsHomePage:!1,title:"wwctl node",description:"Management of node settings",source:"@site/docs/wwctl/node.md",slug:"/wwctl/node",permalink:"/warewulf/docs/wwctl/node",editUrl:"https://github.com/ctrliq/warewulf/edit/main/docs/docs/wwctl/node.md",version:"current",sidebar:"someSidebar",previous:{title:"wwctl kernel",permalink:"/warewulf/docs/wwctl/kernel"},next:{title:"wwctl overlay",permalink:"/warewulf/docs/wwctl/overlay"}},c=[],l={toc:c};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Management of node settings"),Object(a.b)("p",null,"add"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"This command will add a new node to Warewulf.\n\n-g, --group  Group to add nodes to\n-c, --controller  Controller to add nodes to\n-N, --netdevDefine  the network device to configure\n-I, --ipaddrSet  the node's network device IP address\n-M, --netmaskSet  the node's network device netmask\n-G, --gatewaySet  the node's network device gateway\n-H, --hwaddrSet  the node's network device HW address\n--discoverable  Make this node discoverable\n\nconsole\n")),Object(a.b)("p",null,"Start IPMI console for a singe node."),Object(a.b)("p",null,"delete"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"This command will remove a node from the Warewulf node configuration.\n\n-f, --force  Force node delete\n-g, --group  Set group to delete nodes from\n-c, --controller  Controller to add nodes to\n\nlist\n~~~~\nThis command will show you configured nodes.\n\n-n, --net  Show node network configurations\n-i, --ipmi  Show node IPMI configurations\n-a, --all  Show all node configurations\n-l, --long  Show long or wide format\n\nsensors\n")),Object(a.b)("p",null,"Show IPMI sensors for a single node.\n-F, --full  show detailed output"),Object(a.b)("p",null,"set"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"This command will allow you to set configuration properties for nodes.\n\n--comment  Set a comment for this node\n-C, --container  Set the container (VNFS) for this node\n-K, --kernel  Set Kernel version for nodes\n-A, --kernelargs  Set Kernel argument for nodes\n-c, --cluster  Set the node's cluster group\n-P, --ipxe  Set the node's iPXE template name\n-i, --init  Define the init process to boot the container\n--root  Define the rootfs\n-R, --runtime  Set the node's runtime overlay\n-S, --system  Set the node's system overlay\n--ipmi  Set the node's IPMI IP address\n--ipminetmask  Set the node's IPMI netmask\n--ipmigateway  Set the node's IPMI gateway\n--ipmiuser  Set the node's IPMI username\n--ipmipass  Set the node's IPMI password\n-p, --addprofile  Add Profile(s) to node\n-r, --delprofile  Remove Profile(s) to node\n-N, --netdev  Define the network device to configure\n-I, --ipaddr  Set the node's network device IP address\n-M, --netmask  Set the node's network device netmask\n-G, --gateway  Set the node's network device gateway\n-H, --hwaddr  Set the node's network device HW address\n--netdel  Delete the node's network device\n--netdefault  Set this network to be default\n-a, --all  Set all nodes\n-y, --yes  Set 'yes' to all questions asked\n-f, --force  Force configuration (even on error)\n--discoverable  Make this node discoverable\n--undiscoverable  Remove the discoverable flag\n\n")))}s.isMDXComponent=!0},115:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return w}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),s=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},u=function(e){var n=s(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},f=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(t),f=o,w=u["".concat(i,".").concat(f)]||u[f]||p[f]||a;return t?r.a.createElement(w,d(d({ref:n},l),{},{components:t})):r.a.createElement(w,d({ref:n},l))}));function w(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var l=2;l<a;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);